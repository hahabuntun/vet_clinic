<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Свободное расписание</title>
<link rel="stylesheet" href="/styles/css/doctor_schedule.css">
<link rel="stylesheet" href="/styles/css/basic_nav.css">
</head>
<body>

<header>
    <nav>
        <ul>
            <li><a href="/clients">Управлять клиентами</a></li>
                <li><a href="/doctor_schedule">Управлять расписанием врачей</a></li>
                <li><a href="/confirmed_bookings">Подтвержденные записи</a></li>
                <li><a href="/unconfirmed_bookings">Неподтвержденные записи</a></li>
                <li><a href="/make_appointment">Записть клиента</a></li>
                <li><a href="#">Выход</a></li>
        </ul>
    </nav>
</header>
<main>
    <h1>Врачи</h1>
    <div class="schedule">
        <div class="doctorSchedule">
            <% doctors.forEach(doctor => { %>
                <div class="doctorInfo">
                    <p><%= doctor.name %> <%= doctor.second_name %> <%= doctor.third_name %></p>
                    <label for="date">Дата:</label>
                    <input id="<%= doctor._id %>" name="date" type="date">
                    <% doctor.appointments.forEach(appointment => { %>
                    <div id="<%= appointment._id %>" class="scheduleEntry">
                        <span><%= appointment.service_name %> - <%= appointment.time %></span>
                        <button class="deleteBtn">&#10006;</button>
                    </div>
                    <% }); %>
                    <hr>
                    <form class="add-entry-form">
                        <input type="hidden" name="doctor_id" value="<%= doctor._id %>">
                        <label for="time">Время:</label>
                        <input name="appointment_time" type="time" placeholder="Time">
                        <select name="service_id" id="service_type">
                            <% services.forEach(service => { %>
                                <option  value="<%= service._id %>"><%= service.name %></option>
                            <% }); %>
                        </select>
                        <br>
                        <button type="submit" class="addBtn">Добавить</button>
                    </form>
                </div>
            <% }); %>
        </div>
    </div>
</main>


<script>

    

    function set_date(){
        const dateInputs = document.querySelectorAll('input[type="date"]');
        dateInputs.forEach((dateInput) => {
            const selected_date = new Date().toISOString().slice(0, 10);
            dateInput.value = selected_date;
            dateInput.dispatchEvent(new Event('change'));
        });
    }
    

    async function refresh_doctor_div(doctor_div, doctor_id, date){
        try{
            const response = await fetch(`/doctor_schedule/${doctor_id}?date=${date}`, {
                    method: 'get',
            });
            const data = await response.json();
            const scheduleEntries = doctor_div.querySelectorAll('.scheduleEntry');
            scheduleEntries.forEach(async (entry) => {
                entry.remove();
            });
            const helper = doctor_div.querySelector('hr');
            const appointments = data.appointments;
            appointments.forEach(async (appointment) =>{
                    var schedEntry = document.createElement('div');
                    schedEntry.className = "scheduleEntry";
                    schedEntry.id = appointment._id;
                    var span = document.createElement('span');
                    span.textContent = `${appointment.service_name} - ${appointment.time}`;
                    schedEntry.appendChild(span);
                    var btn = document.createElement('button');
                    btn.className = "deleteBtn";
                    btn.innerHTML = "\&#10006;";
                    schedEntry.appendChild(btn);
                    helper.insertAdjacentElement('beforebegin', schedEntry);
            })
            add_delete_schedule_entry_handlers();
        }catch(error){
            console.log(error);
        }
        
    }

    async function handleDateChange(event) {
        try {
            const selectedDate = event.target.value;
            const doctor_id = event.target.id;
            var date = new Date();
            if (selectedDate != ""){
                date = new Date(selectedDate);
            }
            await refresh_doctor_div(event.target.parentElement, doctor_id, date)
        } catch (error) {
            console.error('Error:', error);
        }
    }


    async function handleEntryAdded(event) {
        const selectedDate = event.target.parentElement.querySelectorAll('input[type="date"]')[0].value;
        const doctor_id = event.target.parentElement.querySelectorAll('input[type="date"]')[0].id;
        var date = new Date();
        if (selectedDate != ""){
            date = new Date(selectedDate);
        }
        try{
            //send post request
            event.preventDefault();
            const formData = new FormData(event.target);
            formData.append('date', date); 
            await fetch(`/doctor_schedule`, {
                method: 'POST',
                body: formData
            })
            .then(async (response) => {
            // Handle successful update
            if (response.status == 201){
                await refresh_doctor_div(event.target.parentElement, doctor_id, date);
            }
            })
            .catch(error => {
                console.log(error);
            });
        }catch(error){
            console.log(error);
        }
    }


    async function handleEntryDeleted(event) {
        try {
            const selectedDate = event.target.parentElement.parentElement.querySelectorAll('input[type="date"]')[0].value;
            const doctor_id = event.target.parentElement.parentElement.querySelectorAll('input[type="date"]')[0].id;
            const appointment_id = event.target.parentElement.id;
            console.log(appointment_id);
            var date = new Date();
            if (selectedDate != ""){
                date = new Date(selectedDate);
            }
            await fetch(`/doctor_schedule/${appointment_id}`, {
                method: 'delete',
            })
            .then(async (response) => {
            // Handle successful update
            if (response.status == 200){
                await refresh_doctor_div(event.target.parentElement.parentElement, doctor_id, date);
            }
            })
            .catch(error => {
                console.log(error);
            });
        } catch (error) {
            console.error('Error:', error);
        }
    }

    function add_change_date_handlers(){
        const dateInputs = document.querySelectorAll('input[type="date"]');
        dateInputs.forEach((dateInput) => {
            dateInput.addEventListener('change', handleDateChange);
        });
    }

    function add_insert_schedule_entry_handlers(){
        const addEntryForms = document.querySelectorAll('.add-entry-form');
        addEntryForms.forEach(addEntryForm => {
            console.log("aaa");
            addEntryForm.addEventListener('submit',  handleEntryAdded);
        });
    }

    function add_delete_schedule_entry_handlers(){
        const deleteEntryBtns = document.querySelectorAll('.deleteBtn');
        
        deleteEntryBtns.forEach((btn) => {
            btn.addEventListener('click',  handleEntryDeleted);
        });
    }

    
    
    add_change_date_handlers();
    set_date();
    add_insert_schedule_entry_handlers();
    add_delete_schedule_entry_handlers();
</script>
</body>
</html>