<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Информация по текущему приему</title>
    <link rel="stylesheet" href="/styles/css/appointment_info.css">
    <link rel="stylesheet" href="/styles/css/basic_nav.css">
</head>
<body>
    <header>
        <nav>
            <ul>
                <li><a href="/doctors/<%= doctor._id %>/appointments">Приемы</a></li>
                <li><a href="/doctors/<%= doctor._id %>/find_pets">Поиск животного</a></li>
                <li><a href="/doctors/<%= doctor._id %>/schedule">Расписание записей</a></li>
                <li><a href="#">Выход</a></li>
            </ul>
        </nav>
    </header>
    <div id="page-container">
        <h1>Информация по текущему приему</h1>
        <input type="hidden" id="page-id" value="<%=appointment.animal_card_page_id %>">
        <h2>Детали приема: </h2>
        <p>Тип приема: <%= appointment.service_name %></p>
        <p>Дата и время приема: <span id="datetime"><%= appointment.date %>  <%= appointment.time %></span></p>
        <p>Принимающий врач: <%= animal_doctor.name %> <%= animal_doctor.second_name %> <%= animal_doctor.third_name %></p>
        <p>Кличка животного: <span id="animalName"><%= animal.name %></span></p>
        <p>Название животного: <%= animal.type %></p>
        <p>Порода: <span id="breed"><%= animal.breed %></span></p>
        <p>Возраст: <span id="age"><%= animal.age%></span></p>
        <p id="status">Статус приема: <%= appointment.status %></p>
        <a href="/doctors/<%= appointment.doctor_id %>/pets/<%= animal._id %>/card">Карточка животного</a>
        <hr>
        <h2>Проведенные операции:</h2>
        <ul id="procedureList">
        </ul>
        <% if (doctor._id.equals(animal_doctor._id)) { %>
        <form id="procedureForm">
            <label for="procedure_name">Название операции:</label>
            <input type="text" id="procedure_name" name="name">
            <button type="submit">Добавить операцию</button>
        </form>
        <% } %>
        <hr>
        <h2>Симптомы животного: </h2>
        <ul id="symptomsList">
        </ul>
        <% if (doctor._id.equals(animal_doctor._id)) { %>
        <form id="symptomForm">
            <label for="symptom_name">Название симптома:</label>
            <input type="text" id="symptom_name" name="name">
            <button type="submit">Добавить симптом</button>
        </form>
        <% } else { %>
            <p>Условие не выполнено</p>
        <% } %>
        <hr>
        <h2>Поставленный диагноз: </h2>
        <ul id="diagnosisList">
        </ul>
        <% if (doctor._id.equals(animal_doctor._id)) { %>
        <form id="diagnosisForm">
            <label for="diagnosis_name">Диагноз:</label>
            <input type="text" id="diagnosis_name" name="name">
            <button type="submit">Поставить диагноз</button>
        </form>
        <% } %>
        <hr>
        <% if (doctor._id.equals(animal_doctor._id) && appointment.status == "не завершен") { %>
            <h2 id="finish-header">Завершить прием:</h2>
            <button id="btn-finish">Завершить прием</button>
        <% } %>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script>
        $(document).ready(function() {
            $("#procedureForm").on("submit", handleSubmitProcedure);
            $("#diagnosisForm").on("submit", handleSubmitDiagnosis);
            $("#symptomForm").on("submit", handleSubmitSymptom);
            if($('#btn-finish').length){
                    $("#btn-finish").on("click", handle_finish);
            }
            async function handleSubmitProcedure(event){
                event.preventDefault();
                try{
                    const formData = new FormData(event.target);
                    await fetch(`/appointments/${$('#page-id').val()}/procedures`, {
                        method: 'POST',
                        body: formData
                    })
                    .then(async (response) => {
                    if (response.status == 201){
                        await refresh_procedures();
                    }
                    })
                    .catch(error => {
                        console.log(error);
                    });
                }catch(error){
                    console.log(error);
                }
            }
            async function handleSubmitDiagnosis(event){
                event.preventDefault();
                try{
                    const formData = new FormData(event.target);
                    await fetch(`/appointments/${$('#page-id').val()}/diagnosis`, {
                        method: 'POST',
                        body: formData
                    })
                    .then(async (response) => {
                    if (response.status == 201){
                        await refresh_diagnosis();
                    }
                    })
                    .catch(error => {
                        console.log(error);
                    });
                }catch(error){
                    console.log(error);
                }
            }
            async function handleSubmitSymptom(event){
                event.preventDefault();
                try{
                    const formData = new FormData(event.target);
                    await fetch(`/appointments/${$('#page-id').val()}/symptoms`, {
                        method: 'POST',
                        body: formData
                    })
                    .then(async (response) => {
                    if (response.status == 201){
                        await refresh_symptoms();
                    }
                    })
                    .catch(error => {
                        console.log(error);
                    });
                }catch(error){
                    console.log(error);
                }
            }
            async function refresh_symptoms(){
                var animal_card_page_id = $("#page-id").val();
                var parent = $("#symptomsList");
                await $.ajax({
                url: `/appointments/${animal_card_page_id}/symptoms`,
                method: 'GET',
                success: function(data) {
                    parent.empty();
                    data.symptoms.forEach(symptom => {
                        parent.append($(`<li>${symptom.name}</li>`))
                    })
                },
                error: function(error) {
                    console.error('Ошибка при отправке данных:', error);
                }
                });
            }
            async function refresh_diagnosis(){
                var animal_card_page_id = $("#page-id").val();
                var parent = $("#diagnosisList");
                await $.ajax({
                url: `/appointments/${animal_card_page_id}/diagnosis`,
                method: 'GET',
                success: function(data) {
                    parent.empty();
                    data.diagnosises.forEach(diagnosis => {
                        parent.append($(`<li>${diagnosis.name}</li>`))
                    })
                },
                error: function(error) {
                    console.error('Ошибка при отправке данных:', error);
                }
                });
            }
            async function refresh_procedures(){
                var animal_card_page_id = $("#page-id").val();
                var parent = $("#procedureList");
                await $.ajax({
                url: `/appointments/${animal_card_page_id}/procedures`,
                method: 'GET',
                success: function(data) {
                    parent.empty();
                    data.procedures.forEach(procedure => {
                        parent.append($(`<li>${procedure.name}</li>`))
                    })
                },
                error: function(error) {
                    console.error('Ошибка при отправке данных:', error);
                }
                });
            }
            async function handle_finish(event){
                try{
                    await fetch(`/appointments/${$('#page-id').val()}/finish`, {
                        method: 'PATCH',
                    })
                    .then(async (response) => {
                    if (response.status == 200){
                        $("#status").text("Статус приема: завершен");
                        $('#finish-header, #btn-finish').remove();
                    }
                    })
                    .catch(error => {
                        console.log(error);
                    });
                }catch(error){
                    console.log(error);
                }
            }
            refresh_symptoms()
            refresh_procedures()
            refresh_diagnosis()
    });
    </script>
</body>
</html>